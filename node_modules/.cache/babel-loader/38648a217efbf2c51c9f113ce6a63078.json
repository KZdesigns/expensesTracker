{"ast":null,"code":"var _jsxFileName = \"/Users/kylezimmerman/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(\" \");\n  const [enteredAmount, setEnteredAmount] = useState(\" \");\n  const [enteredDate, setEnteredDate] = useState(\" \");\n\n  const titleChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        // using spread operator to get previous state values\n        enterdTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enterdAmount: event.target.value\n      };\n    });\n  };\n\n  const dateChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enterdDate: event.target.value\n      };\n    });\n  }; // Alternative way to handle the state\n  // const [userInput, setUserInput] = useState({\n  //   enterdTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n  // const titleChangeHandler = (event) => {\n  //   setUserInput((prevState) => {\n  //     return {\n  //       ...prevState, // using spread operator to get previous state values\n  //       enterdTitle: event.target.value,\n  //     };\n  //   });\n  // };\n  // const amountChangeHandler = (event) => {\n  //   setUserInput((prevState) => {\n  //     return {\n  //       ...prevState,\n  //       enterdAmount: event.target.value,\n  //     };\n  //   });\n  // };\n  // const dateChangeHandler = (event) => {\n  //   setUserInput((prevState) => {\n  //     return {\n  //       ...prevState,\n  //       enterdDate: event.target.value,\n  //     };\n  //   });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onChange: dateChangeHandler,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"GSHTxMPiGNCIs9UbBcfKjsufbco=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","setUserInput","prevState","enterdTitle","target","value","amountChangeHandler","enterdAmount","dateChangeHandler","enterdDate"],"sources":["/Users/kylezimmerman/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = () => {\n  const [enteredTitle, setEnteredTitle] = useState(\" \");\n  const [enteredAmount, setEnteredAmount] = useState(\" \");\n  const [enteredDate, setEnteredDate] = useState(\" \");\n\n  const titleChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return {\n        ...prevState, // using spread operator to get previous state values\n        enterdTitle: event.target.value,\n      };\n    });\n  };\n\n  const amountChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return {\n        ...prevState,\n        enterdAmount: event.target.value,\n      };\n    });\n  };\n\n  const dateChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return {\n        ...prevState,\n        enterdDate: event.target.value,\n      };\n    });\n  };\n\n  // Alternative way to handle the state\n  // const [userInput, setUserInput] = useState({\n  //   enterdTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  // const titleChangeHandler = (event) => {\n  //   setUserInput((prevState) => {\n  //     return {\n  //       ...prevState, // using spread operator to get previous state values\n  //       enterdTitle: event.target.value,\n  //     };\n  //   });\n  // };\n\n  // const amountChangeHandler = (event) => {\n  //   setUserInput((prevState) => {\n  //     return {\n  //       ...prevState,\n  //       enterdAmount: event.target.value,\n  //     };\n  //   });\n  // };\n\n  // const dateChangeHandler = (event) => {\n  //   setUserInput((prevState) => {\n  //     return {\n  //       ...prevState,\n  //       enterdDate: event.target.value,\n  //     };\n  //   });\n  // };\n\n  return (\n    <form>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\" onChange={dateChangeHandler}>\n          Add Expense\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,GAAD,CAAhD;EACA,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,GAAD,CAAlD;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,GAAD,CAA9C;;EAEA,MAAMQ,kBAAkB,GAAIC,KAAD,IAAW;IACpCC,YAAY,CAAEC,SAAD,IAAe;MAC1B,OAAO,EACL,GAAGA,SADE;QACS;QACdC,WAAW,EAAEH,KAAK,CAACI,MAAN,CAAaC;MAFrB,CAAP;IAID,CALW,CAAZ;EAMD,CAPD;;EASA,MAAMC,mBAAmB,GAAIN,KAAD,IAAW;IACrCC,YAAY,CAAEC,SAAD,IAAe;MAC1B,OAAO,EACL,GAAGA,SADE;QAELK,YAAY,EAAEP,KAAK,CAACI,MAAN,CAAaC;MAFtB,CAAP;IAID,CALW,CAAZ;EAMD,CAPD;;EASA,MAAMG,iBAAiB,GAAIR,KAAD,IAAW;IACnCC,YAAY,CAAEC,SAAD,IAAe;MAC1B,OAAO,EACL,GAAGA,SADE;QAELO,UAAU,EAAET,KAAK,CAACI,MAAN,CAAaC;MAFpB,CAAP;IAID,CALW,CAAZ;EAMD,CAPD,CAvBwB,CAgCxB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEN;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,GAAG,EAAC,MAFN;UAGE,IAAI,EAAC,MAHP;UAIE,QAAQ,EAAEO;QAJZ;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAcE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,GAAG,EAAC,YAAvB;UAAoC,GAAG,EAAC;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAoBE;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAsB,QAAQ,EAAEE,iBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QApBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CA9FD;;GAAMhB,W;;KAAAA,W;AAgGN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}